# Sample workflow for building and deploying a Next.js site to GitHub Pages
#
# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
name: Deploy Next.js site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions: write-all

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  AWS_REGION: us-west-2

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.OIDC_IAM_ROLE_ARN }}
          role-session-name: GitHubActions
          aws-region: ${{ env.AWS_REGION }}

      - name: Checkout
        uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8.6.8
          run_install: |
            - recursive: true
              args: [--no-frozen-lockfile]
            - args: [--global, aws-cdk]

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          check-latest: true

      - name: Deploy backend
        working-directory: backend
        run: |
          cdk deploy \
            -c client-id=${{ secrets.AZURE_AD_CLIENT_ID }} \
            -c client-secret=${{ secrets.AZURE_AD_CLIENT_SECRET }} \
            -c issuer-url=${{ secrets.AZURE_AD_ISSUER_URL }}

      - name: Prepare build
        working-directory: frontend
        env:
          NEXT_PUBLIC_AWS_REGION: us-west-2
          NEXT_PUBLIC_AWS_COGNITO_USER_POOL_ID: ${{ secrets.NEXT_PUBLIC_AWS_COGNITO_USER_POOL_ID }}
          NEXT_PUBLIC_AWS_WEB_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_AWS_WEB_CLIENT_ID }}
          NEXT_PUBLIC_AWS_COGNITO_ID_POOL_ID: ${{ secrets.NEXT_PUBLIC_AWS_COGNITO_ID_POOL_ID }}
          NEXT_PUBLIC_AWS_COGNITO_OAUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_AWS_COGNITO_OAUTH_DOMAIN }}
          NEXT_PUBLIC_AWS_COGNITO_OAUTH_REDIRECT_SIGNIN: https://theater-schedule-book.pages.dev
          NEXT_PUBLIC_AWS_COGNITO_OAUTH_REDIRECT_SIGNOUT: https://theater-schedule-book.pages.dev
          NEXT_PUBLIC_GRAPHQL_API_ENDPOINT_URL: ${{ secrets.NEXT_PUBLIC_GRAPHQL_API_ENDPOINT_URL }}
        run: |
          touch .env.local
          echo "NEXT_PUBLIC_AWS_REGION=${NEXT_PUBLIC_AWS_REGION}" >> .env.local
          echo "NEXT_PUBLIC_AWS_COGNITO_USER_POOL_ID=${NEXT_PUBLIC_AWS_COGNITO_USER_POOL_ID}" >> .env.local
          echo "NEXT_PUBLIC_AWS_WEB_CLIENT_ID=${NEXT_PUBLIC_AWS_WEB_CLIENT_ID}" >> .env.local
          echo "NEXT_PUBLIC_AWS_COGNITO_ID_POOL_ID=${NEXT_PUBLIC_AWS_COGNITO_ID_POOL_ID}" >> .env.local
          echo "NEXT_PUBLIC_AWS_COGNITO_OAUTH_DOMAIN=${NEXT_PUBLIC_AWS_COGNITO_OAUTH_DOMAIN}" >> .env.local
          echo "NEXT_PUBLIC_AWS_COGNITO_OAUTH_REDIRECT_SIGNIN=${NEXT_PUBLIC_AWS_COGNITO_OAUTH_REDIRECT_SIGNIN}" >> .env.local
          echo "NEXT_PUBLIC_AWS_COGNITO_OAUTH_REDIRECT_SIGNOUT=${NEXT_PUBLIC_AWS_COGNITO_OAUTH_REDIRECT_SIGNOUT}" >> .env.local
          echo "NEXT_PUBLIC_GRAPHQL_API_ENDPOINT_URL=${NEXT_PUBLIC_GRAPHQL_API_ENDPOINT_URL}" >> .env.local

      - name: Build with Next.js
        working-directory: frontend
        run: pnpm build

      - name: Publish to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: 189f193d40c08d2618ee4b94de81d79e
          projectName: ${{ github.event.repository.name }}
          directory: ./out
          # Optional: Enable this if you want to have GitHub Deployments triggered
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          # Optional: Switch what branch you are publishing to.
          # By default this will be the branch which triggered this workflow
          branch: main
          # Optional: Change the working directory
          workingDirectory: ./frontend
          # Optional: Change the Wrangler version, allows you to point to a specific version or a tag such as `beta`
          wranglerVersion: '3'
